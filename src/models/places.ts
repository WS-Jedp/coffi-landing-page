
export type GeoLocation = {
  latitude: number
  longitude: number
  zone?: string
  city?: string
  country?: string
}


export enum MINDSETS {
  ALL = "ALL",
  WORK = "WORK",
  STUDY = "STUDY",
  ROMANTIC = "ROMANTIC",
  VIBE = "VIBE",
  COWORK = "COWORK",
  SOCIAL = "SOCIAL",
  UNKNOWN = "UNKNOWN",
}

export enum PLACE_TYPES {
  ALL = "ALL",
  UNKNOWN = "UNKNOWN",
  COFFEE = "COFFEE",
  LIBRARY = "LIBRARY",
  // SQUARE = "SQUARE",
  PARK = "PARK",
  ROOFTOP = "ROOFTOP",
  LOOKOUT = "LOOKOUT",
  RESTAURANT = "RESTAURANT",
  COWORK_ZONE = "COWORK_ZONE",
}

export type PlaceTypesFilter = {
  id: number
  name: PLACE_TYPES
  title: string
}

export const PLACE_TYPES_KEYS = [
  PLACE_TYPES.COFFEE,
  PLACE_TYPES.LIBRARY,
  PLACE_TYPES.ROOFTOP,
  PLACE_TYPES.COWORK_ZONE,
  PLACE_TYPES.PARK,
  PLACE_TYPES.LOOKOUT
]


export enum PEOPLE_AMOUNT_ENUM {
  MAX_PEOPLE_AMOUNT_5 = "MAX_PEOPLE_AMOUNT_5",
  MAX_PEOPLE_AMOUNT_10 = "MAX_PEOPLE_AMOUNT_10",
  MAX_PEOPLE_AMOUNT_25 = "MAX_PEOPLE_AMOUNT_25",
  MIN_PEOPLE_AMOUNT_30 = "MIN_PEOPLE_AMOUNT_30+",
}

export enum NOISE_LEVEL_ENUM  {
  VERY_QUIET = "VERY_QUIET",
  QUIET = "QUIET",
  MODERATE = "MODERATE",
  LOUD = "LOUD",
  VERY_LOUD = "VERY_LOUD",
}

export interface Place {
  id: string;
  name: string;
  knownFor: MINDSETS;
  description?: string | null;
  languages: LANGUAGE_ENUM[];
  ambianceTags: AMBIENCE_TAG_ENUM[];
  themeTags: THEME_TAG_ENUM[];
  approximateDailyCost: PLACE_APPROXIMATE_DAILY_CONST_ENUM | null;
  type: PLACE_TYPES[];
  location: GeoLocation;
  commodities?: Commodities;
  rules: PlaceRules;
  realTimeInsights: {
    peopleAmount: PEOPLE_AMOUNT_ENUM;
    idealFor: MINDSETS;
    noiseLevel: NOISE_LEVEL_ENUM;
  }
}


export enum LANGUAGE_ENUM {
  SPANISH = "SPANISH",
  ENGLISH = "ENGLISH",
  FRENCH = "FRENCH"
}

export const languageOptions = [
  LANGUAGE_ENUM.SPANISH,
  LANGUAGE_ENUM.ENGLISH,
  LANGUAGE_ENUM.FRENCH,
];

export enum AMBIENCE_TAG_ENUM {
  ELEGANT = "ELEGANT",
  CREATIVE = "CREATIVE",
  CASUAL = "CASUAL",
  COZY = "COZY",
  QUIET = "QUIET",
  PROFESSIONAL = "PROFESSIONAL",
  RUSTIC = "RUSTIC",
  MINIMALIST = "MINIMALIST",
  INDUSTRIAL = "INDUSTRIAL",
  NATURE_INSPIRED = "NATURE_INSPIRED",
  CHIC = "CHIC",
  RETRO = "RETRO",
  CULTURAL = "CULTURAL",
  SOPHISTICATED = "SOPHISTICATED",
  TECHNOLOGICAL = "TECHNOLOGICAL",
  BOHEMIAN = "BOHEMIAN",
  ZEN = "ZEN",
  TRENDY = "TRENDY",
  VIBRANT = "VIBRANT",
  ASIAN = "ASIAN",
  COLLABORATIVE = "COLLABORATIVE",
}

export const ambienceTagsOptions = [
  AMBIENCE_TAG_ENUM.ELEGANT,
  AMBIENCE_TAG_ENUM.CREATIVE,
  AMBIENCE_TAG_ENUM.CASUAL,
  AMBIENCE_TAG_ENUM.COZY,
  AMBIENCE_TAG_ENUM.QUIET,
  AMBIENCE_TAG_ENUM.PROFESSIONAL,
  AMBIENCE_TAG_ENUM.RUSTIC,
  AMBIENCE_TAG_ENUM.MINIMALIST,
  AMBIENCE_TAG_ENUM.INDUSTRIAL,
  AMBIENCE_TAG_ENUM.NATURE_INSPIRED,
  AMBIENCE_TAG_ENUM.CHIC,
  AMBIENCE_TAG_ENUM.RETRO,
  AMBIENCE_TAG_ENUM.CULTURAL,
  AMBIENCE_TAG_ENUM.SOPHISTICATED,
  AMBIENCE_TAG_ENUM.TECHNOLOGICAL,
  AMBIENCE_TAG_ENUM.BOHEMIAN,
  AMBIENCE_TAG_ENUM.ZEN,
  AMBIENCE_TAG_ENUM.TRENDY,
  AMBIENCE_TAG_ENUM.VIBRANT,
  AMBIENCE_TAG_ENUM.ASIAN,
  AMBIENCE_TAG_ENUM.COLLABORATIVE,
];

export enum THEME_TAG_ENUM {
  STARTUPS = "STARTUPS",
  LIBRARY_INSPIRED = "LIBRARY_INSPIRED",
  FOCUS_ZONE = "FOCUS_ZONE",
  TECH_DRIVEN = "TECH_DRIVEN",

  CREATIVE_STUDIO = "CREATIVE_STUDIO",
  ART_AND_DESIGN = "ART_AND_DESIGN",
  NOMAD_MEETUPS = "NOMAD_MEETUPS",
  CULTURAL_EXCHANGE = "CULTURAL_EXCHANGE",
  BLOCKCHAIN_AND_WEB3 = "BLOCKCHAIN_AND_WEB3",

  HEALTH_AND_WELLNESS = "HEALTH_AND_WELLNESS",
  ECO_FRIENDLY = "ECO_FRIENDLY",
  COFFEE_CULTURE = "COFFEE_CULTURE",
  LUXURY_AND_COMFORT = "LUXURY_AND_COMFORT",

  EVENT_DRIVEN = "EVENT_DRIVEN",
  TRAVEL_FOCUSED = "TRAVEL_FOCUSED",
  NIGTH_OWL = "NIGTH_OWL",

  FOODIE_PARADISE = "FOODIE_PARADISE",
  CHILL_ZONES = "CHILL_ZONES",
}

export const themeTagOptions = [
  THEME_TAG_ENUM.STARTUPS,
  THEME_TAG_ENUM.LIBRARY_INSPIRED,
  THEME_TAG_ENUM.FOCUS_ZONE,
  THEME_TAG_ENUM.TECH_DRIVEN,
  THEME_TAG_ENUM.CREATIVE_STUDIO,
  THEME_TAG_ENUM.ART_AND_DESIGN,
  THEME_TAG_ENUM.NOMAD_MEETUPS,
  THEME_TAG_ENUM.CULTURAL_EXCHANGE,
  THEME_TAG_ENUM.BLOCKCHAIN_AND_WEB3,
  THEME_TAG_ENUM.HEALTH_AND_WELLNESS,
  THEME_TAG_ENUM.ECO_FRIENDLY,
  THEME_TAG_ENUM.COFFEE_CULTURE,
  THEME_TAG_ENUM.LUXURY_AND_COMFORT,
  THEME_TAG_ENUM.EVENT_DRIVEN,
  THEME_TAG_ENUM.TRAVEL_FOCUSED,
  THEME_TAG_ENUM.NIGTH_OWL,
  THEME_TAG_ENUM.FOODIE_PARADISE,
  THEME_TAG_ENUM.CHILL_ZONES,
];

export enum PLACE_APPROXIMATE_DAILY_CONST_ENUM {
  CHEAP = "CHEAP",
  MODERATE_COST = "MODERATE",
  EXPENSIVE = "EXPENSIVE",
  VERY_EXPENSIVE = "VERY_EXPENSIVE",
}

export const placeApproximateDailyCostOptions = [
  PLACE_APPROXIMATE_DAILY_CONST_ENUM.CHEAP,
  PLACE_APPROXIMATE_DAILY_CONST_ENUM.MODERATE_COST,
  PLACE_APPROXIMATE_DAILY_CONST_ENUM.EXPENSIVE,
  PLACE_APPROXIMATE_DAILY_CONST_ENUM.VERY_EXPENSIVE,
]



/**
 * Model Commodities
 *
 */
export type Commodities = {
  publicWifi: boolean | null;
  wifiSpeed: WIFI_SPEED_COMMODITY_ENUM | null;
  parking: PARKING_COMMODITY_ENUM | null;
  publicPlugs: boolean | null;
  plugsAmount: number | null;
  coworkSpace: boolean | null;
  publicBathrooms: boolean | null;
  mobileSignal: MOBILE_SIGNAL_COMMODITY_ENUM | null;
  food: FOOD_COMMODITY_ENUM[] | null;
  foodQuality: COMMODITY_QUALITY | null;
  comfortLevel: COMFORT_LEVEL_COMMODITY_ENUM | null;
  outdoorSeating: boolean | null;
  temperatureControl: TEMPERATURE_CONTROL_COMMODITY_ENUM[] | null;
  accessibility: boolean | null;
  eventSpace: boolean | null;
  greenAreas: boolean | null;
  alcoholAvailability: boolean | null;
  cafe: boolean | null;
  cafeQuality: COMMODITY_QUALITY | null;
  bakery: boolean | null;
  bakeryQuality: COMMODITY_QUALITY | null;
};

export enum PLACE_COMMODITIES_ENUM {
  PUBLIC_WIFI = "publicWifi",
  WIFI_SPEED = "wifiSpeed",
  PARKING = "parking",
  PUBLIC_PLUGS = "publicPlugs",
  PLUGS_AMOUNT = "plugsAmount",
  COWORK_SPACE = "coworkSpace",
  PUBLIC_BATHROOMS = "publicBathrooms",
  MOBILE_SIGNAL = "mobileSignal",
  FOOD = "food",
  FOOD_QUALITY = "foodQuality",
  COMFORT_LEVEL = "comfortLevel",
  OUTDOOR_SEATING = "outdoorSeating",
  TEMPERATURE_CONTROL = "temperatureControl",
  ACCESSIBILITY = "accessibility",
  EVENT_SPACE = "eventSpace",
  GREEN_AREAS = "greenAreas",
  ALCOHOL_AVAILABILITY = "alcoholAvailability",
  CAFE = "cafe",
  CAFE_QUALITY = "cafeQuality",
  BAKERY = "bakery",
  BAKERY_QUALITY = "bakeryQuality",
}

export enum WIFI_SPEED_COMMODITY_ENUM {
  SLOW = "SLOW",
  MODERATE = "MODERATE",
  FAST = "FAST",
  VERY_FAST = "VERY_FAST",
}

export const wifiSpeedOptions = [
  WIFI_SPEED_COMMODITY_ENUM.SLOW,
  WIFI_SPEED_COMMODITY_ENUM.MODERATE,
  WIFI_SPEED_COMMODITY_ENUM.FAST,
  WIFI_SPEED_COMMODITY_ENUM.VERY_FAST,
];

export enum PARKING_COMMODITY_ENUM {
  IN_PLACE = "IN_PLACE",
  IN_STREET = "IN_STREET",
  NEARBY = "NEARBY",
}

export const parkingOptions = [
  PARKING_COMMODITY_ENUM.IN_PLACE,
  PARKING_COMMODITY_ENUM.IN_STREET,
  PARKING_COMMODITY_ENUM.NEARBY,
];

export enum MOBILE_SIGNAL_COMMODITY_ENUM {
  WEAK = "WEAK",
  MEDIUM = "MEDIUM",
  STRONG = "STRONG",
}

export const mobileSignalOptions = [
  MOBILE_SIGNAL_COMMODITY_ENUM.WEAK,
  MOBILE_SIGNAL_COMMODITY_ENUM.MEDIUM,
  MOBILE_SIGNAL_COMMODITY_ENUM.STRONG,
];

export enum FOOD_COMMODITY_ENUM {
  FAST_FOOD = "FAST_FOOD",
  RESTAURANT = "RESTAURANT",
  VEGAN = "VEGAN",
  VEGETARIAN = "VEGETARIAN",
  CARNIVORE = "CARNIVORE",
}

export const foodOptions = [
  FOOD_COMMODITY_ENUM.FAST_FOOD,
  FOOD_COMMODITY_ENUM.VEGAN,
  FOOD_COMMODITY_ENUM.VEGETARIAN,
  FOOD_COMMODITY_ENUM.CARNIVORE,
];

export enum COMMODITY_QUALITY {
  VERY_BAD = "VERY_BAD",
  BAD = "BAD",
  REGULAR = "REGULAR",
  GOOD = "GOOD",
  VERY_GOOD = "VERY_GOOD",
  EXCELLENT = "EXCELLENT",
}

export const commodityQualityOptions = [
  COMMODITY_QUALITY.VERY_BAD,
  COMMODITY_QUALITY.BAD,
  COMMODITY_QUALITY.REGULAR,
  COMMODITY_QUALITY.GOOD,
  COMMODITY_QUALITY.VERY_GOOD,
  COMMODITY_QUALITY.EXCELLENT,
];

export enum COMFORT_LEVEL_COMMODITY_ENUM {
  BASIC = "BASIC",
  CASUAL = "CASUAL",
  ERGONOMIC = "ERGONOMIC",
  LUXURIOUS = "LUXURIOUS",
}

export const comfortLevelOptions = [
  COMFORT_LEVEL_COMMODITY_ENUM.BASIC,
  COMFORT_LEVEL_COMMODITY_ENUM.CASUAL,
  COMFORT_LEVEL_COMMODITY_ENUM.ERGONOMIC,
  COMFORT_LEVEL_COMMODITY_ENUM.LUXURIOUS,
];

export enum TEMPERATURE_CONTROL_COMMODITY_ENUM {
  AIR_CONDITIONING = "AIR_CONDITIONING",
  HEATING = "HEATING",
}

export const temperatureControlOptions = [
  TEMPERATURE_CONTROL_COMMODITY_ENUM.AIR_CONDITIONING,
  TEMPERATURE_CONTROL_COMMODITY_ENUM.HEATING,
];

export const MAIN_PLACE_COMMODITIES_KEYS = [
  PLACE_COMMODITIES_ENUM.COWORK_SPACE,
  PLACE_COMMODITIES_ENUM.PUBLIC_WIFI,
  PLACE_COMMODITIES_ENUM.WIFI_SPEED,
  PLACE_COMMODITIES_ENUM.PUBLIC_PLUGS,
  PLACE_COMMODITIES_ENUM.PARKING,
  PLACE_COMMODITIES_ENUM.PUBLIC_BATHROOMS,
  PLACE_COMMODITIES_ENUM.MOBILE_SIGNAL,
  PLACE_COMMODITIES_ENUM.COMFORT_LEVEL,
  PLACE_COMMODITIES_ENUM.OUTDOOR_SEATING,
  PLACE_COMMODITIES_ENUM.TEMPERATURE_CONTROL,
  PLACE_COMMODITIES_ENUM.ACCESSIBILITY,
  PLACE_COMMODITIES_ENUM.EVENT_SPACE,
  PLACE_COMMODITIES_ENUM.GREEN_AREAS,
  PLACE_COMMODITIES_ENUM.ALCOHOL_AVAILABILITY,
  PLACE_COMMODITIES_ENUM.CAFE,
  PLACE_COMMODITIES_ENUM.BAKERY,
  PLACE_COMMODITIES_ENUM.FOOD,
];

export function getCommodityOptions(rule: PLACE_COMMODITIES_ENUM) {
  switch (rule) {
    case PLACE_COMMODITIES_ENUM.WIFI_SPEED:
      return wifiSpeedOptions;
    case PLACE_COMMODITIES_ENUM.PARKING:
      return parkingOptions;
    case PLACE_COMMODITIES_ENUM.MOBILE_SIGNAL:
      return mobileSignalOptions;
    case PLACE_COMMODITIES_ENUM.FOOD_QUALITY:
      return commodityQualityOptions;
    case PLACE_COMMODITIES_ENUM.COMFORT_LEVEL:
      return comfortLevelOptions;
    case PLACE_COMMODITIES_ENUM.CAFE_QUALITY:
      return commodityQualityOptions;
    case PLACE_COMMODITIES_ENUM.BAKERY_QUALITY:
      return commodityQualityOptions;
    case PLACE_COMMODITIES_ENUM.FOOD:
      return foodOptions;
    case PLACE_COMMODITIES_ENUM.TEMPERATURE_CONTROL:
      return temperatureControlOptions;
    default:
      return [];
  }
}

/**
 * Model PlaceRules
 *
 */
export type PlaceRules = {
  openAt: string;
  closedAt: string;
  petFriendly: boolean | null;
  smoking: boolean | null;
  underAge: boolean | null;
  timeLimit: PLACE_TIME_LIMIT_RULE | null;
  noisePolicy: NOISE_POLICY_RULE_ENUM | null;
  consumptionPolicy: CONSUMPTION_POLICY_RULE_ENUM | null;
  privacyPolicy: PRIVACY_POLICY_RULE_ENUM[] | null;
};

export enum PLACE_RULES_ENUM {
  OPEN_AT = "openAt",
  CLOSED_AT = "closedAt",
  PET_FRIENDLY = "petFriendly",
  SMOKING = "smoking",
  UNDER_AGE = "underAge",
  TIME_LIMIT = "timeLimit",
  NOISE_POLICY = "noisePolicy",
  CONSUMPTION_POLICY = "consumptionPolicy",
  PRIVACY_POLICY = "privacyPolicy",
}

export enum PLACE_CONFIRMATION_STATUS {
  RECOMMENDED = "RECOMMENDED",
  APPROVED = "APPROVED",
  REJECTED = "REJECTED",
}

export enum PLACE_TIME_LIMIT_RULE {
  NO_LIMIT = "NO_LIMIT",
  UNLIMITED = "UNLIMITED",
  PER_HOUR = "PER_HOUR",
}

export const placeTimeLimitOptions = [
  PLACE_TIME_LIMIT_RULE.NO_LIMIT,
  PLACE_TIME_LIMIT_RULE.UNLIMITED,
  PLACE_TIME_LIMIT_RULE.PER_HOUR,
];

export enum NOISE_POLICY_RULE_ENUM {
  QUIET_ONLY = "QUIET_ONLY",
  MODERATE_NOISE_ALLOWED = "MODERATE_NOISE_ALLOWED",
  NO_NOISE_RESTRICTION = "NO_NOISE_RESTRICTION",
}

export const noisePolicyRuleOptions = [
  NOISE_POLICY_RULE_ENUM.QUIET_ONLY,
  NOISE_POLICY_RULE_ENUM.MODERATE_NOISE_ALLOWED,
  NOISE_POLICY_RULE_ENUM.NO_NOISE_RESTRICTION,
];

export enum CONSUMPTION_POLICY_RULE_ENUM {
  PURCHASE_REQUIRED = "PURCHASE_REQUIRED",
  OUTSIDE_PURCHASE_ALLOWED = "OUTSIDE_PURCHASE_ALLOWED",
  NO_OUTSIDE_FOOD = "NO_OUTSIDE_FOOD",
}

export const consumptionRuleOptions = [
  CONSUMPTION_POLICY_RULE_ENUM.NO_OUTSIDE_FOOD,
  CONSUMPTION_POLICY_RULE_ENUM.OUTSIDE_PURCHASE_ALLOWED,
  CONSUMPTION_POLICY_RULE_ENUM.PURCHASE_REQUIRED,
];

export enum PRIVACY_POLICY_RULE_ENUM {
  OPEN_WORKSPACE = "OPEN_WORKSPACE",
  SHARED_DESKS = "SHARED_DESKS",
  PRIVATE_ROOM = "PRIVATE_ROOM",
}

export const privacyPolicyRuleOptions = [
  PRIVACY_POLICY_RULE_ENUM.OPEN_WORKSPACE,
  PRIVACY_POLICY_RULE_ENUM.SHARED_DESKS,
  PRIVACY_POLICY_RULE_ENUM.PRIVATE_ROOM,
];

export function getRuleOptions(rule: PLACE_RULES_ENUM) {
  switch (rule) {
    case PLACE_RULES_ENUM.TIME_LIMIT:
      return placeTimeLimitOptions;
    case PLACE_RULES_ENUM.NOISE_POLICY:
      return noisePolicyRuleOptions;
    case PLACE_RULES_ENUM.CONSUMPTION_POLICY:
      return consumptionRuleOptions;
    case PLACE_RULES_ENUM.PRIVACY_POLICY:
      return privacyPolicyRuleOptions;
    default:
      return [];
  }
}

export const MAIN_RULES_KEYS: PLACE_RULES_ENUM[] = [
  PLACE_RULES_ENUM.PET_FRIENDLY,
  PLACE_RULES_ENUM.SMOKING,
  PLACE_RULES_ENUM.UNDER_AGE,
  PLACE_RULES_ENUM.TIME_LIMIT,
  PLACE_RULES_ENUM.NOISE_POLICY,
  PLACE_RULES_ENUM.CONSUMPTION_POLICY,
  PLACE_RULES_ENUM.PRIVACY_POLICY,
];
